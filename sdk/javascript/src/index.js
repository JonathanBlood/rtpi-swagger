/**
 * RTPI REST Web Services API
 * <p>RTPI REST Web Services API (<a href=\"https://goo.gl/s6NTJe\">RRWS API</a>) provides REST interface to retrieve information on real time bus information, timetables and bus stops. </p> <p>Each method available in RRWS API will be invoked using plain HTTP Request (GET method). Depending on parameters provided, result will be returned either in XML or JSON format (if format is not provided then JSON is used by default). Response will contain requested information (see method specification for details) and error status of the request.</p>  <h2>Error Codes</h2> <table> <tr><th>Error Code</th><th>Description</th></tr> <tr><td>0</td><td>Success</td></tr> <tr><td>1</td><td>No Results</td></tr> <tr><td>2</td><td>Missing Parameter</td></tr> <tr><td>3</td><td>Invalid Parameter</td></tr> <tr><td>4</td><td>Sceduled Downtime</td></tr> <tr><td>5</td><td>Unexpected System Error</td></tr> </table> <p>Error code is included in response for each message. For some error codes additional details will be provided in free text format (Error Message field).</p> 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BusStopList', 'model/Operator', 'model/OperatorList', 'model/RealTimeInformation', 'model/RealTimeInformationList', 'model/Route', 'model/RouteDetail', 'model/RouteDetailList', 'model/RouteList', 'model/RouteOperator', 'model/Stop', 'model/Timetable', 'model/TimetableList', 'api/BusStopInformationApi', 'api/OperatorInformationApi', 'api/RealTimeBusInformationApi', 'api/RouteDetailInformationApi', 'api/RouteInformationApi', 'api/TimetableInformationApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/BusStopList'), require('./model/Operator'), require('./model/OperatorList'), require('./model/RealTimeInformation'), require('./model/RealTimeInformationList'), require('./model/Route'), require('./model/RouteDetail'), require('./model/RouteDetailList'), require('./model/RouteList'), require('./model/RouteOperator'), require('./model/Stop'), require('./model/Timetable'), require('./model/TimetableList'), require('./api/BusStopInformationApi'), require('./api/OperatorInformationApi'), require('./api/RealTimeBusInformationApi'), require('./api/RouteDetailInformationApi'), require('./api/RouteInformationApi'), require('./api/TimetableInformationApi'));
  }
}(function(ApiClient, BusStopList, Operator, OperatorList, RealTimeInformation, RealTimeInformationList, Route, RouteDetail, RouteDetailList, RouteList, RouteOperator, Stop, Timetable, TimetableList, BusStopInformationApi, OperatorInformationApi, RealTimeBusInformationApi, RouteDetailInformationApi, RouteInformationApi, TimetableInformationApi) {
  'use strict';

  /**
   * pRTPI_REST_Web_Services_API__a_hrefhttpsgoo_gls6NTJeRRWS_APIa_provides_REST_interface_to_retrieve_information_on_real_time_businformation_timetables_and_bus_stops_ppEach_method_available_in_RRWS_API_will_be_invoked_using_plain_HTTP_Request__GET_method__Depending_on_parameters_provided_result_will_be_returned_either_in_XML_or_JSON_format__if_format_is_not_provided_then_JSON_is_used_by_default__Response_will_contain_requested_information__see_method_specification_for_details_and_error_status_of_the_request_ph2Error_Codesh2tabletrthError_CodeththDescriptionthtrtrtd0tdtdSuccesstdtrtrtd1tdtdNo_Resultstdtrtrtd2tdtdMissing_Parametertdtrtrtd3tdtdInvalid_Parametertdtrtrtd4tdtdSceduled_Downtimetdtrtrtd5tdtdUnexpected_System_ErrortdtrtablepError_code_is_included_in_response_for_each_message__For_some_error_codes_additional_details_will_be_provided_in_free_text_format__Error_Message_field_p.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var RtpiRestWebServicesApi = require('index'); // See note below*.
   * var xxxSvc = new RtpiRestWebServicesApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new RtpiRestWebServicesApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new RtpiRestWebServicesApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new RtpiRestWebServicesApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The BusStopList model constructor.
     * @property {module:model/BusStopList}
     */
    BusStopList: BusStopList,
    /**
     * The Operator model constructor.
     * @property {module:model/Operator}
     */
    Operator: Operator,
    /**
     * The OperatorList model constructor.
     * @property {module:model/OperatorList}
     */
    OperatorList: OperatorList,
    /**
     * The RealTimeInformation model constructor.
     * @property {module:model/RealTimeInformation}
     */
    RealTimeInformation: RealTimeInformation,
    /**
     * The RealTimeInformationList model constructor.
     * @property {module:model/RealTimeInformationList}
     */
    RealTimeInformationList: RealTimeInformationList,
    /**
     * The Route model constructor.
     * @property {module:model/Route}
     */
    Route: Route,
    /**
     * The RouteDetail model constructor.
     * @property {module:model/RouteDetail}
     */
    RouteDetail: RouteDetail,
    /**
     * The RouteDetailList model constructor.
     * @property {module:model/RouteDetailList}
     */
    RouteDetailList: RouteDetailList,
    /**
     * The RouteList model constructor.
     * @property {module:model/RouteList}
     */
    RouteList: RouteList,
    /**
     * The RouteOperator model constructor.
     * @property {module:model/RouteOperator}
     */
    RouteOperator: RouteOperator,
    /**
     * The Stop model constructor.
     * @property {module:model/Stop}
     */
    Stop: Stop,
    /**
     * The Timetable model constructor.
     * @property {module:model/Timetable}
     */
    Timetable: Timetable,
    /**
     * The TimetableList model constructor.
     * @property {module:model/TimetableList}
     */
    TimetableList: TimetableList,
    /**
     * The BusStopInformationApi service constructor.
     * @property {module:api/BusStopInformationApi}
     */
    BusStopInformationApi: BusStopInformationApi,
    /**
     * The OperatorInformationApi service constructor.
     * @property {module:api/OperatorInformationApi}
     */
    OperatorInformationApi: OperatorInformationApi,
    /**
     * The RealTimeBusInformationApi service constructor.
     * @property {module:api/RealTimeBusInformationApi}
     */
    RealTimeBusInformationApi: RealTimeBusInformationApi,
    /**
     * The RouteDetailInformationApi service constructor.
     * @property {module:api/RouteDetailInformationApi}
     */
    RouteDetailInformationApi: RouteDetailInformationApi,
    /**
     * The RouteInformationApi service constructor.
     * @property {module:api/RouteInformationApi}
     */
    RouteInformationApi: RouteInformationApi,
    /**
     * The TimetableInformationApi service constructor.
     * @property {module:api/TimetableInformationApi}
     */
    TimetableInformationApi: TimetableInformationApi
  };

  return exports;
}));
