//
// RealTimeBusInformationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class RealTimeBusInformationAPI: APIBase {
    /**
     * enum for parameter format
     */
    public enum Format_getRealTimeBusInformation: String { 
        case Json = "json"
        case Xml = "xml"
    }

    /**
     * enum for parameter _operator
     */
    public enum Operator_getRealTimeBusInformation: String { 
        case Be = "BE"
        case Bac = "bac"
        case Kb = "KB"
        case Luas = "LUAS"
        case Ir = "ir"
    }

    /**
     Endpoint to retrieve real time bus information
     
     - parameter stopid: (query) The bus stop id 
     - parameter format: (query) If not provided JSON format will be used by default (optional)
     - parameter _operator: (query) If provided retrieves routes for the given operator (optional)
     - parameter routeid: (query) The route identifier (optional)
     - parameter maxresults: (query) The maximum number of results, if not provided system will limit the number of results depending on server configuration (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getRealTimeBusInformation(stopid stopid: String, format: Format_getRealTimeBusInformation? = nil, _operator: Operator_getRealTimeBusInformation? = nil, routeid: String? = nil, maxresults: String? = nil, completion: ((data: RealTimeInformationList?, error: ErrorType?) -> Void)) {
        getRealTimeBusInformationWithRequestBuilder(stopid: stopid, format: format, _operator: _operator, routeid: routeid, maxresults: maxresults).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Endpoint to retrieve real time bus information
     - GET /realtimebusinformation
     - examples: [{contentType=application/json, example={
  "errormessage" : "aeiou",
  "numberofresults" : 5,
  "stopid" : "281",
  "results" : [ {
    "departuredatetime" : "17/06/2017 14:40:00",
    "origin" : "Park Avenue",
    "destination" : "Shanard Road",
    "scheduleddeparturedatetime" : "17/06/2017 14:40:00",
    "operator" : "bac",
    "monitored" : "true",
    "destinationlocalized" : "aeiou",
    "route" : "1",
    "scheduledarrivaldatetime" : "17/06/2017 14:40:00",
    "arrivaldatetime" : "17/06/2017 14:40:00",
    "sourcetimestamp" : "17/06/2017 13:40:16",
    "originlocalized" : "Park Avenue",
    "lowfloorstatus" : "no",
    "duetime" : "Due",
    "departureduetime" : "Due",
    "direction" : "Inbound",
    "additionalinformation" : "aeiou"
  } ],
  "errorcode" : "0",
  "timestamp" : "17/06/2017 11:44:35"
}}, {contentType=application/xml, example=<RealTimeInformationList>
  <errorcode>0</errorcode>
  <errormessage>string</errormessage>
  <numberofresults>5</numberofresults>
  <stopid>281</stopid>
  <timestamp>17/06/2017 11:44:35</timestamp>
  <results>
  </results>
</RealTimeInformationList>}]
     - examples: [{contentType=application/json, example={
  "errormessage" : "aeiou",
  "numberofresults" : 5,
  "stopid" : "281",
  "results" : [ {
    "departuredatetime" : "17/06/2017 14:40:00",
    "origin" : "Park Avenue",
    "destination" : "Shanard Road",
    "scheduleddeparturedatetime" : "17/06/2017 14:40:00",
    "operator" : "bac",
    "monitored" : "true",
    "destinationlocalized" : "aeiou",
    "route" : "1",
    "scheduledarrivaldatetime" : "17/06/2017 14:40:00",
    "arrivaldatetime" : "17/06/2017 14:40:00",
    "sourcetimestamp" : "17/06/2017 13:40:16",
    "originlocalized" : "Park Avenue",
    "lowfloorstatus" : "no",
    "duetime" : "Due",
    "departureduetime" : "Due",
    "direction" : "Inbound",
    "additionalinformation" : "aeiou"
  } ],
  "errorcode" : "0",
  "timestamp" : "17/06/2017 11:44:35"
}}, {contentType=application/xml, example=<RealTimeInformationList>
  <errorcode>0</errorcode>
  <errormessage>string</errormessage>
  <numberofresults>5</numberofresults>
  <stopid>281</stopid>
  <timestamp>17/06/2017 11:44:35</timestamp>
  <results>
  </results>
</RealTimeInformationList>}]
     
     - parameter stopid: (query) The bus stop id 
     - parameter format: (query) If not provided JSON format will be used by default (optional)
     - parameter _operator: (query) If provided retrieves routes for the given operator (optional)
     - parameter routeid: (query) The route identifier (optional)
     - parameter maxresults: (query) The maximum number of results, if not provided system will limit the number of results depending on server configuration (optional)

     - returns: RequestBuilder<RealTimeInformationList> 
     */
    public class func getRealTimeBusInformationWithRequestBuilder(stopid stopid: String, format: Format_getRealTimeBusInformation? = nil, _operator: Operator_getRealTimeBusInformation? = nil, routeid: String? = nil, maxresults: String? = nil) -> RequestBuilder<RealTimeInformationList> {
        let path = "/realtimebusinformation"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "format": format?.rawValue,
            "operator": _operator?.rawValue,
            "stopid": stopid,
            "routeid": routeid,
            "maxresults": maxresults
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<RealTimeInformationList>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
